{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#flippermce-firmware","title":"FlipperMCE Firmware","text":"<p>FlipperMCE is a fully open source Nintendo GameCube Memory Card Emulator (MCE), based on the famous sd2psx PlayStation 2 MCE designed by @xyzz.</p> <p>It implements the GameCube Memory Card protocol and is able to emulate cards from 59 blocks (0.5 MB / 4 MBit) up to 1019 blocks (8 MB / 64 MBit).</p> <p>Each card image is saved as a dedicated .raw file in its respective folder on the SD card.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Emulation of cards from 59 to 1019 blocks</li> <li>GameID supplied by Swiss or any other game loader that supports it (CubeBoot, Nintendont, etc.)</li> <li>Multi-region support (creates new cards in either JPN or World encoding)</li> </ul> <p>For more info, see Features.</p>"},{"location":"#special-thanks","title":"Special Thanks","text":"<ul> <li>BitFunX: for PCB design, testing and support \u2764\ufe0f</li> <li>Vapor, rippenbiest, Mancloud, @hitmanmcc: for beta testing \u2764\ufe0f</li> <li>@xyzz: for sd2psx \u2764\ufe0f</li> <li>sd2psXtd Team: (you know who you are \ud83d\ude09)</li> <li>8BitMods Team: for helping out with card formatting and providing lots of other useful information for things like unlock \u2764\ufe0f</li> <li>@extrems, : for insights into EXI communications and libOGC2 SDK</li> </ul>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"faq/#is-flippermce-a-clone-of-8bitmods-memcard-pro","title":"Is FlipperMCE a clone of 8BitMods MemCard PRO\u00ae?","text":"<p>It is not! 8BitMods uses completely different hardware and software. Moreover, they have features implemented that will never make their way to FlipperMCE.</p> FlipperMCE MemCard PRO\u00ae GC MCU RP2040 ESP32 Open Source \u2713 \u2717 GameCube Support \u2713 \u2713 Wii Support \u2713 \u2713 Card Sizes 59 - 1019 59 - 1019 Wi-Fi \u2717 \u2713 Game ID \u2713 \u2713 GameID Mapping \u2713 \u2717 <p>While FlipperMCE has its own completely independent code base, we are still very grateful for many useful hints from the 8BitMods team about certain issues we found during development.</p>"},{"location":"faq/#will-flippermce-add-a-web-interface","title":"Will FlipperMCE add a Web Interface?","text":"<p>Since the current hardware is really at its timing limit, there is no room for adding a web interface.</p>"},{"location":"faq/#my-wii-will-not-recognize-the-card-as-a-memory-card","title":"My Wii will not recognize the card as a memory card","text":"<p>Within the Wii System Menu, the card may occasionally not be recognized. If this happens, please try the following things:</p> <ul> <li>Close and re-open the GameCube Card Browser</li> <li>Switch the mounted card using the buttons on FlipperMCE</li> <li>Re-plug FlipperMCE</li> </ul>"},{"location":"faq/#all-my-cards-are-displayed-as-corrupted-what-is-wrong","title":"All my cards are displayed as corrupted. What is wrong?","text":"<p>Please check your Encoding in your card settings.</p> <p>Each card is (by default) formatted either in \"world\" or Japanese region. If the region does not match your GameCube/Wii or your game, it will display as corrupted.</p> <p>As a rule of thumb:</p> <ul> <li>NTSC-J BIOS cannot access world cards</li> <li>NTSC-U/PAL BIOS cannot access Japanese cards</li> <li>Regional games for Japan cannot access world cards</li> <li>Regional games for other regions cannot access Japanese cards</li> </ul> <p>If you change the Encoding setting, all new cards (except Game ID cards) will be formatted with this encoding.</p> <p>WARNING: Existing cards will keep their encoding until they are formatted through the GameCube/Wii. Formatting will result in data loss of this card!</p>"},{"location":"faq/#can-i-load-game-from-my-flippermce","title":"Can I load game from my FlipperMCE?","text":"<p>As of now, this is not possible.</p>"},{"location":"faq/#can-i-connect-my-flippermce-to-usb-to-browse-my-files","title":"Can I connect my FlipperMCE to USB to browse my files?","text":"<p>No. Please use an SD Card reader to read your card images.</p>"},{"location":"features/","title":"Features","text":""},{"location":"features/#flippermce-features","title":"FlipperMCE Features","text":"<p>This document describes the main features and configuration options available for FlipperMCE, including card restore, Game ID support, multiple card sizes, folder mapping, configuration files, and splash screen customization.</p>"},{"location":"features/#card-restore","title":"Card Restore","text":"<p>When enabled, FlipperMCE will always boot to the last used card.</p>"},{"location":"features/#game-id","title":"Game ID","text":"<p>Many loaders implement a special protocol that allows the GameCube to transmit the Game ID of the currently started game to a Memory Card Emulator (MCE).</p> <p>FlipperMCE supports this protocol (see the documentation in <code>doc/mcp</code>) and will load or create a card for each transmitted Game ID if configured to do so.</p> <p>As a bonus, it will select the correct default card encoding for the game.</p> <p>Game ID cards will reside in <code>MemoryCards/GC/&lt;GameID&gt;</code>.</p>"},{"location":"features/#multiple-card-sizes","title":"Multiple Card Sizes","text":"<p>FlipperMCE supports card sizes from 4 to 64 MBit.</p> <p>Since the naming scheme for cards can be confusing, please see the following explanation:</p> MBit Blocks Size (MB) 4 59 0.5 8 123 1 16 251 2 32 507 4 64 1019 8"},{"location":"features/#game2folder-mapping","title":"Game2Folder Mapping","text":"<p>Some games share save data for multiple Game IDs. For these cases, a custom game-to-folder mapping can be created.</p> <p>If a game with a mapped ID is loaded, instead of using the Game ID-based folder, the mapped folder is used for storing the card.</p> <p>The mapping needs to be defined in <code>.flippermce/Game2Folder.ini</code> as follows:</p> <pre><code>[GC]\nGT4P=FolderName\n</code></pre> <p>In this case, FolderName refers to a folder located under <code>/MemoryCards/GC</code>.</p> <p>Note: Make sure there is an empty line at the end of the ini file.</p>"},{"location":"features/#settings-file","title":"Settings File","text":"<p>FlipperMCE generates a settings file (<code>.flippermce/settings.ini</code>) that allows you to edit some settings through your computer. This is useful when using one SD card with multiple FlipperMCE devices.</p> <p>A settings file has the following format:</p> <pre><code>[General]\nFlippedScreen=OFF\n[GC]\nCardRestore=ON\nGameID=ON\nCardSize=64\n</code></pre> <p>Possible values are:</p> Setting Values Description CardRestore <code>OFF</code>, <code>ON</code> Restore last card at boot GameID <code>OFF</code>, <code>ON</code> Use Game ID if transmitted CardSize <code>4</code>, <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code> Default card size in MBit FlippedScreen <code>ON</code>, <code>OFF</code> Flip the screen horizontally <p>Note: Make sure there is an empty line at the end of the ini file.</p>"},{"location":"features/#per-card-configs","title":"Per-Card Configs","text":"<p>Some configuration values can be modified on a per-card basis within a config file named <code>CardX.ini</code> in a card folder, where <code>X</code> is the card index (e.g., 1, 2, etc.).</p> <ul> <li>ChannelName: Assigns custom names to each channel (slot) on the card.</li> <li>MaxChannels: Sets the maximum number of channels for this card.</li> <li>CardSize: Sets the card size in MBit for this card.</li> </ul> <p>Note: Make sure there is an empty line at the end of the ini file.</p> <pre><code>[ChannelName]\n1=Channel 1 Name\n2=Channel 2 Name\n3=Channel 3 Name\n4=Channel 4 Name\n5=Channel 5 Name\n6=Channel 6 Name\n7=Channel 7 Name\n8=Channel 8 Name\n[Settings]\nMaxChannels=8  # Maximum number of channels for this card\nCardSize=4     # Card size in MBit for this card\n</code></pre>"},{"location":"features/#splash-screen","title":"Splash Screen","text":"<p>By default, FlipperMCE comes with a special splash screen resembling the project's logo.</p> <p>If you want to customize your splash screen, go to SplashGen.</p> <p>From there, you can customize a splash screen to your needs. Once you are happy with the result displayed in the preview, press the Download UF2 button. This will generate a UF2 file containing your splash screen.</p> <p>You can flash this splash screen just like any other firmware update.</p> <p>The flashed splash screen is maintained after a firmware update, so you probably only need to upload it once.</p> <p>Note: When combining the splash screen with a firmware UF2 (such as for mass production or flashing multiple FlipperMCEs with the same splash and firmware combination), it's strongly recommended to flash the combined image with <code>picotool</code>, since uploading using the usual firmware update procedure often does not work. To do so, please install <code>picotool</code> and run:</p> <pre><code>picotool load &lt;combined_file_name&gt;.uf2\n</code></pre> <p>while having the FlipperMCE to be updated connected in bootloader mode.</p>"},{"location":"features/#card-splashes-110","title":"Card splashes (1.1.0)","text":"<p>Add a splash image that the device shows in the card browser. Use the SplashGen to convert a source image to the device <code>.bin</code> format, then place the generated file in the card folder on your SD card.</p> <p>Naming and behavior - Folder-level splash (default for the folder):     - Path: <code>MemoryCards/GC/&lt;card_folder&gt;/&lt;card_folder&gt;.bin</code>     - Example: <code>MemoryCards/GC/SuperGame/SuperGame.bin</code> \u2014 used when no channel-specific image exists. - Channel-specific splash (overrides folder-level for that channel):     - Path: <code>MemoryCards/GC/&lt;card_folder&gt;/&lt;card_folder&gt;-&lt;channel_number&gt;.bin</code>     - Example: <code>MemoryCards/GC/SuperGame/SuperGame-1.bin</code> \u2014 shown only for channel 1 of that card folder. - Fallback rules:     - If a channel-specific file exists it is used.     - Otherwise the folder-level <code>&lt;card_folder&gt;.bin</code> is used.     - If neither exists, no splash is shown.</p> <p>Practical notes - <code>&lt;channel_number&gt;</code> matches the on-device channel index (1..N). - Filenames must match exactly; FAT SD cards are usually case-insensitive but keep names consistent. - Use <code>misc/splashgen.html</code> to produce correctly-sized and packed <code>.bin</code> files for the OLED. - Keep names short \u2014 very long filenames may cause display or performance issues. - Store splash <code>.bin</code> files alongside that card's <code>CardX.ini</code> and save data in the same folder.</p>"},{"location":"features/#block-device-interface-110","title":"Block Device Interface (1.1.0)","text":"<p>FlipperMCE can be accessed as a block device through GameCube and Wii applications. This feature allows direct read/write access to the sd card storage at a block level. To use this functionality, applications must implement the MMCE (Multipurpose Memory Card Emulator) protocol, which is documented in detail in the memcardpro.txt specification.</p> <p>Development Support: - The latest version of libOGC2 includes built-in support for this protocol - Suitable for custom tools and applications that need direct memory card access - Enables advanced features like backup/restore utilities or save managers</p>"},{"location":"gcmce/","title":"Getting Started with GCMCE","text":"<p>GCMCE is a FlipperMCE version designed and created by BitFunX. It is available at the usual marketplaces like aliexpress or through their website https://www.bitfunx.com.</p>"},{"location":"gcmce/#firmware","title":"Firmware","text":""},{"location":"gcmce/#update-install-firmware","title":"Update / Install Firmware","text":"<p>To install the firmware, connect the assembled GCMCE to your computer while holding any of the buttons.</p> <p>A new drive will pop up on your computer called RPI-RP2. Copy over the flippermce.uf2 file.</p> <p>Note: The drive will automatically disconnect after copying.</p>"},{"location":"gcmce/#emergency-update","title":"Emergency Update","text":"<p>If (for whatever reason) your GCMCE became corrupted or cannot start up in the normal firmware update mode anymore, please press and hold the hidden button on the right side of FlipperMCE while connecting to USB.</p> <p>A new drive will pop up on your computer called RPI-RP2. Copy over the flippermce.uf2 file.</p> <p>Note: The drive will automatically disconnect after copying.</p>"},{"location":"getting_started/","title":"Getting Started with FlipperMCE","text":"<p>Welcome to the FlipperMCE Getting Started guide! This guide will walk you through obtaining the hardware, assembling your device, and installing the firmware.</p>"},{"location":"getting_started/#hardware","title":"Hardware","text":"<p>You can get the hardware for FlipperMCE in different ways:</p>"},{"location":"getting_started/#buy-one-assembled-from-a-pcb-manufacturer-like-jlcpcbpcbway","title":"Buy one assembled from a PCB manufacturer like JLCPCB/PCBWay","text":"<p>When ordering with any PCB manufacturer, make sure to:</p> <ul> <li>Use 0.8mm PCB thickness</li> <li>ENIG finish</li> </ul> <p>You can find all manufacturing files in our PCB Repository.</p>"},{"location":"getting_started/#case","title":"Case","text":"<p>To get the official case for FlipperMCE, please head over to the PCB repository.</p>"},{"location":"getting_started/#assembly","title":"Assembly","text":"<p>Assembly Steps:</p> <ol> <li>Add the Buttons to the top shell</li> <li>Connect the Display to the PCB</li> <li>Add the Display Bracket to the PCB (it will only fit one way), under the display flex cable</li> <li>Drop the PCB + Display + Display Bracket sandwich into the top shell</li> <li>Angle-In the Bottom Shell</li> <li>Fit the screws</li> </ol>"},{"location":"getting_started/#firmware","title":"Firmware","text":""},{"location":"getting_started/#update-install-firmware","title":"Update / Install Firmware","text":"<p>Download the current FlipperMCE (flippermce.uf2) release at the Firmware Repository.</p> <p>To install the firmware, connect the assembled FlipperMCE to your computer while holding any of the buttons.</p> <p>A new drive will pop up on your computer called RPI-RP2. Copy over the flippermce.uf2 file.</p> <p>Note: The drive will automatically disconnect after copying.</p>"},{"location":"getting_started/#emergency-update","title":"Emergency Update","text":"<p>If (for whatever reason) your FlipperMCE became corrupted or cannot start up in the normal firmware update mode anymore, please press and hold the hidden button on the right side of FlipperMCE while connecting to USB.</p> <p>A new drive will pop up on your computer called RPI-RP2. Copy over the flippermce.uf2 file.</p> <p>Note: The drive will automatically disconnect after copying.</p>"},{"location":"navigation/","title":"FlipperMCE Navigation","text":"<p>This guide explains how to navigate your FlipperMCE device using the buttons and menu system. Learn how to switch between cards, access settings, and customize your device.</p> <p> </p>"},{"location":"navigation/#navigating-cards","title":"Navigating Cards","text":"<p>FlipperMCE provides simple button combinations to navigate through your memory card images:</p> Action Result Short press Switch card channel up/down Long press Switch card up/down <p>Note: To access your named or GameID cards manually, switch your card down while on Card Index 1.</p>"},{"location":"navigation/#opening-the-menu","title":"Opening the Menu","text":"<p>Press both buttons simultaneously to open the menu interface. This provides access to all device settings and information.</p>"},{"location":"navigation/#navigating-the-menu","title":"Navigating the Menu","text":"Action Result Short press left Move up in menu Short press right Move down in menu Long press right Enter submenu/change value Long press left Go back"},{"location":"navigation/#menu-items","title":"Menu Items","text":""},{"location":"navigation/#card-settings","title":"Card Settings","text":"<p>Configure settings for newly created memory cards:</p> <ul> <li>Card Restore: Reload card from last session at startup</li> <li>Game ID: Create cards for each game transmitted to FlipperMCE</li> <li>Size: Select size of new card images (in blocks)</li> <li>Encoding: Choose Japanese or World encoding for new non-GameID cards</li> </ul>"},{"location":"navigation/#display-settings","title":"Display Settings","text":"<p>Customize your device's display:</p> <ul> <li>Auto Off: Enable display timeout to save power</li> <li>Contrast: Adjust display contrast</li> <li>Flip: Rotate display 180 degrees</li> <li>Show Info: Toggle card information on main screen</li> </ul>"},{"location":"navigation/#system-information","title":"System Information","text":"<p>View technical details about your device:</p> <ul> <li>Version: Current firmware version (or nightly build)</li> <li>Commit: Git commit hash of current build</li> <li>Debug: Indicates if running a debug build</li> </ul>"}]}